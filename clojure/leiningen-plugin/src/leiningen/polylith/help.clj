(ns leiningen.polylith.help)

(defn help []
  (println "Polylith 0.0.26-alpha (2017-12-04) - by Joakim Tengstrand")
  (println "  https://github.com/tengstrand/polylith")
  (println)
  (println "  lein polylith cmd [args]  - where cmd [args] are:")
  (println)
  (println "    changes x s1 s2      List changed components, systems or builds")
  (println "                         between two Git sha1:s")
  (println "    delete c n           Deletes component 'n'")
  (println "    deps                 List all dependencies")
  (println "    diff s1 s2           List all changes between two Git sha1:s")
  (println "    info [x] [s1 s2]     list apis, components, systems and builds")
  (println "    new c n              Create component 'n'")
  (println "    settings             The polylith settings in current project.clj")
  (println "    tests x [s1 s2]      Show or run tests")
  (println)
  (println "  lein polylith [help]        Show this help")
  (println "  lein polylith help cmd      Show help for a specific command")
  (println "  lein polylith help project  Show valid project.clj settings")
  (println)
  (println "  Examples:")
  (println "    lein polylith changes s 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122")
  (println "    lein polylith delete c mycomponent")
  (println "    lein polylith deps     list dependencies to apis")
  (println "    lein polylith deps f   list dependencies to api functions")
  (println "    lein polylith diff 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122")
  (println "    lein polylith help info")
  (println "    lein polylith info")
  (println "    lein polylith info a")
  (println "    lein polylith info 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122")
  (println "    lein polylith info a 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122")
  (println "    lein polylith info c 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122")
  (println "    lein polylith new c mycomponent")
  (println "    lein polylith tests u")
  (println "    lein polylith tests ui+ 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122"))

(defn changes []
  (println "  Show what has changed between two Git sha1's")
  (println "")
  (println "  lein polylith changes x s1 s2")
  (println "    x = a -> show changed apis")
  (println "        b -> show changed builds")
  (println "        s -> show changed systems")
  (println "        c -> show changed components")
  (println "    s1 = last successful Git sha1")
  (println "    s2 = current Git sha1")
  (println)
  (println "  example:")
  (println "    lein polylith changes s 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122"))

(defn delete []
  (println "  Deletes a component")
  (println)
  (println "  lein polylith delete c n")
  (println "    deletes component 'n'")
  (println)
  (println "  example:")
  (println "    lein polylith delete c mycomponent"))

(defn deps []
  (println "  List dependencies to apis")
  (println)
  (println "  lein polylith deps     list dependencies to apis")
  (println "  lein polylith deps f   list dependencies to api functions"))

(defn diff []
  (println "  List all files and directories that has changed between two Git sha1's")
  (println)
  (println "  lein polylith diff s1 s2")
  (println "    s1 = last successful Git sha1")
  (println "    s2 = current Git sha1")
  (println)
  (println "  example:")
  (println "    lein polylith diff 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122"))

(defn info []
  (println "  Show the content of a Polylith system and optionally its changes")
  (println "  (with an * if something was changed)")
  (println)
  (println "  lein polylith info [x] [s1 s2]")
  (println "    x = a -> show all apis, components, systems and builds")
  (println "        c -> show changed apis, components, systems and builds")
  (println "        u -> show unchanged apis, components, systems and builds")
  (println "        (omitted) -> show all components, systems, builds")
  (println "                     (and apis if changed)")
  (println "    s1 = last successful Git sha1")
  (println "    s2 = current Git sha1")
  (println)
  (println "  example:")
  (println "    lein polylith info")
  (println "    lein polylith info a")
  (println "    lein polylith info 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122")
  (println "    lein polylith info a 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122")
  (println "    lein polylith info c 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122"))

(defn new-cmd []
  (println "  Creates a component")
  (println)
  (println "  lein polylith new c n")
  (println "    create a component with then name 'n'")
  (println)
  (println "  example:")
  (println "    lein polylith new c mycomponent"))

(defn project []
  (println "  These are the valid settings of the :polylith section in the developments")
  (println "  project.clj file (the main development project if having more than one):")
  (println)
  (println "    :ignore-tests [...]   which component and system tests that should be ignored.")
  (println)
  (println "    :top-ns x             x is the name of the top namespace. This ns is added")
  (println "                          to the apis project.clj and each components project.clj")
  (println "                          (to add the correct namespace to the Maven artifact).")
  (println)
  (println "    :top-dir              the directory path of the top namespace. If empty then")
  (println "                          each component name will be the top namespace.")
  (println)
  (println "  Example of :ignore-tests:")
  (println "    [\"comp*\"] = ignore all 'comp' tests including all underlying namespaces")
  (println "    [\"comp.x*\"] = ignore all 'comp.x' tests including all underlying namespaces")
  (println "    [\"comp.x\" \"sys.y\"] = ignore all 'comp.x' and 'sys.y' tests")
  (println)
  (println "  Example of project.clj:")
  (println "    (defproject ...")
  (println "      ...")
  (println "      :polylith {:ignore-tests [\"migration*\" \"backend.mock\"]")
  (println "                 :top-ns \"com.mycompany\"")
  (println "                 :top-dir \"com/mycompany\"")
  (println "                 :development-dirs [\"development\"]}")
  (println "      ...")
  (println "    )"))

(defn settings []
  (println "  Shows the {:polylith ....} settings in the project.clj file")
  (println "  + the root directory of the Polylith workspace"))

(defn tests []
  (println "  Show or execute tests")
  (println)
  (println "  lein polylith tests x [s1 s2]")
  (println "    x: different combinations of u,i,+,-:")
  (println "        u = unit tests")
  (println "        i = integration tests")
  (println "        + = execute tests")
  (println "        - = show test statement")
  (println "    combinations:")
  (println "        u = list unit tests")
  (println "        i = list integration tests")
  (println "        ui = list unit + integration tests")
  (println "        u- = show test statement (u tests)")
  (println "        i- = show test statement (i tests)")
  (println "        ui- = show test statement (u+i tests)")
  (println "        u+ = execute unit tests")
  (println "        i+ = execute integration tests")
  (println "        ui+ = execute unit + integration tests")
  (println "        ui+- = execute unit + integration tests + show test statement")
  (println)
  (println "    s1 = last successful Git sha1")
  (println "    s2 = current Git sha1")
  (println)
  (println "    -----------------------------------------------------------")
  (println)
  (println "    if s1 and s2 are given:")
  (println "      include tests from changed components and systems")
  (println "    if s1 and s2 are omitted:")
  (println "      include tests from all components and systems")
  (println)
  (println "  examples:")
  (println "    lein polylith tests u")
  (println "    lein polylith tests ui+ 2c851f3c6e7a5114cecf6bdd6e1c8c8aec8b32c1 58cd8b3106c942f372a40616fe9155c9d2efd122"))
